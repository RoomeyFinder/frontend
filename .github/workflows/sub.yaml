# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Build

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Create environment file
        run: |
          echo "NOTION_DATABASE_ID=${{ secrets.NOTION_DATABASE_ID }}" >> .env
          echo "NOTION_API_KEY=${{ secrets.NOTION_API_KEY }}" >> .env
          echo "NOTION_DATABASE_ID=${{ secrets.NOTION_DATABASE_ID }}"
          echo "NOTION_API_KEY=${{ secrets.NOTION_API_KEY }}"
        # uses: SpicyPizza/create-envfile@v2.0
        # with:
        #   # envkey_NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        #   # envkey_NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
        #   directory: ./
        #   file_name: .env
        #   fail_on_empty: false
        #   sort_keys: false
          
      - name: Build Next.js application
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Create .nojekyll file
        run: touch ./out/.nojekyll

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out
